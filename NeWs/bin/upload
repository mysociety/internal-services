#!/usr/bin/perl -w -I ../perllib
#
# upload:
# Upload scraped Newspaper Society newspaper records.
#
# Copyright (c) 2005 UK Citizens Online Democracy. All rights reserved.
# Email: louise.crow@gmail.com; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: upload,v 1.6 2007-02-15 15:32:12 louise Exp $';

use strict;
require 5.8.0;

package Oops;

@Oops::ISA = qw(Error::Simple);

package main;

# Horrible boilerplate to set up appropriate library paths.
use FindBin;
use lib "$FindBin::Bin/../../perllib";
use lib "$FindBin::Bin/../../../perllib";

# Do this first of all, because NeWs.pm needs to see the config file.
BEGIN {
    use mySociety::Config;
    mySociety::Config::set_file('../../conf/general');
}

use Data::Dumper;
use Error qw(:try);
use IO::File;
use NeWs;


use vars qw($data_dir);

$data_dir = "../data";

# Take a dump of Perl data structures as produced
# by extract_data_from_local_files()
sub upload_prepared_data(){

    my $infile = new IO::File("$data_dir/processed/out.txt", O_RDONLY);
    my $dumped = join('', $infile->getlines());
    $infile->close();

    foreach my $dumpee (split(/\-\-\-\-\-\n/, $dumped)) {
        my $VAR1;
        eval $dumpee;
        my %record = %{$VAR1};
      
        # extract the postcode from address
        my $a = $record{address};
        my @address_lines = split(/\n/,$a);
        my $lastline = $address_lines[-1];
        if ($lastline =~ m/^([[:upper:]]{1,2}\s?\d{1,2}[[:upper:]]{0,1}\s?[\d|[:upper:]]{1,2}\s?[[:upper:]]{2})$/m){
            $record{postcode} = $lastline;
        }else{
            $record{postcode} = "UNKNOWN";
        }

        #mark the record as not deleted
        $record{isdeleted} = 0;
  
        my $news = NeWs::Paper->new(\%record);
        my $update_coverage = 1;
        my $source = '';
        # TODO: Need to check here that the Newspaper Society haven't changed their IDs
        # as this is used to match records in the db - if there's a change, we need to 
        # remap.
        $news->publish($source, $update_coverage);
    }

}

upload_prepared_data();
