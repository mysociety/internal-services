#!/usr/bin/perl -w -I../../perllib
#
# load_goveval_ward_names
#
# Copyright (c) 2004 UK Citizens Online Democracy. All rights reserved.
# Email: chris@mysociety.org; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: load_goveval_ward_names,v 1.8 2005-01-21 19:28:03 francis Exp $';

use strict;
$| = 1; # flush STDOUT afer each write

use DBI;
use DBD::Pg;
use Text::CSV;
use Data::Dumper;
use mySociety::CouncilMatch;

use Common;

my $runoneid = shift(@ARGV);
my $m_dbh = connect_to_mapit_database();
my $d_dbh = connect_to_dadem_database();

my $verbosity = 0;

# Cache of area_id->type etc.
my $area_id_data = $m_dbh->selectall_hashref(
        q#select area_name.name, area.id from area, area_name
            where area_name.area_id = area.id and
            area_name.name_type = 'F' and
            (# . join(' or ', map { "type = '$_'" } @$mySociety::CouncilMatch::parent_types) . q#)#,
        'id');

if (defined $runoneid) {
    # Process just one council
    print "Processing one council " . $area_id_data->{$runoneid}->{name} . " $runoneid\n";
    my $result = mySociety::CouncilMatch::match_council_wards($runoneid, $verbosity, $m_dbh, $d_dbh);
    if ($result->{error}) {
        print "Failed\n";
        print $result->{matchesdump};
        print $result->{errors};
    } else {
        print "Success\n";
    }
} else {
    # For each "council" (or similar), get list of "wards" (or similar) and match it up
    # with what is in the database already.
    my $success = 0;
    my $count = 0;
    foreach my $id (keys %$area_id_data) {
        printf "%38s %5d: ", $area_id_data->{$id}->{name}, $id;
        my $result = mySociety::CouncilMatch::match_council_wards($id, $verbosity, $m_dbh, $d_dbh);
        if ($result->{error}) {
            print " FAIL\n";
        } else {
            $success++;
            print " ok\n";
        }

        $count++;
    }
    print "\n";
    print "Success for $success/$count councils\n";
    print "Failed for " . ($count-$success) . " councils\n";
}

$m_dbh->disconnect();
$d_dbh->disconnect();



