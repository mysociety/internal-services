#!/usr/bin/perl -w -I../perllib -I ../../perllib
#
# generate-boundary-polyline:
# Given some area IDs, generate GPolylines of them.

my $rcsid = ''; $rcsid .= '$Id: generate-boundary-polyline,v 1.5 2009-12-23 11:08:15 matthew Exp $';

use strict;

use Getopt::Long;
use mySociety::GeoUtil;
use Common;
use BoundaryLine;

my @area_ids = @ARGV;
die "Need to supply area IDs" unless @area_ids;

my $dbh = Common::connect_to_mapit_database();

my $g = current_generation($dbh);
my $s = "select id, name, area_geometry.* from area, area_name, area_geometry
    where area.id = area_name.area_id and area.id = area_geometry.area_id and name_type = 'O'
        -- and ($g >= generation_low and $g <= generation_high)
        and id in (" . join(',', @area_ids) . ")";
my $os_name_to_db_info = $dbh->selectall_hashref($s, 'id');

my ($minx, $maxx, $miny, $maxy);
foreach (values %$os_name_to_db_info) {
    (my $name = $_->{name}) =~ s/[^a-z]/_/ig;
    $minx = $_->{min_e} if !defined($minx) || $_->{min_e} < $minx;
    $maxx = $_->{max_e} if !defined($maxx) || $_->{max_e} > $maxx;
    $miny = $_->{min_n} if !defined($miny) || $_->{min_n} < $miny;
    $maxy = $_->{max_n} if !defined($maxy) || $_->{max_n} > $maxy;

    die "Doesn't work with multipart yet" if $_->{parts} > 1;
    my $binary_poly = $_->{polygon};
    my ($sense, $vertice_count, @polydata) = unpack('iid*', $binary_poly);
    die "Doesn't work with holes" if $sense < 0;

    my @out;
    for (my $i=0; $i<@polydata; $i+=2) {
        my ($x, $y) = mySociety::GeoUtil::national_grid_to_wgs84($polydata[$i], $polydata[$i+1], 'G');
        push @out, 'new GLatLng(' . $x . ',' . $y . ')';
    }
    print "var p$name = new GPolygon([" . join(",\n", @out) . '], "#ff0000", 2, 1, "#ff0000", 0.2)' . "\n";
    print "map.addOverlay(p$name)\n";
}

my $centre_x = ($minx + $maxx) / 2;
my $centre_y = ($miny + $maxy) / 2;
($centre_x, $centre_y) = mySociety::GeoUtil::national_grid_to_wgs84($centre_x, $centre_y, 'G');
print "map.setCenter(new GLatLng($centre_x, $centre_y), 13);\n";

$dbh->disconnect();
