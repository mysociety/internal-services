#!/usr/bin/perl -w -I../perllib -I ../../perllib
#
# process_boundary_line-check_os_names:
# There appears to have been a few ward name changes in the past year.
# These are just made by councils without warning, and it's quite annoying
# matching things up at the slow speed of process_boundary_line.
# 
# This script just goes through Boundary-Line and the current database and
# alerts anything that doesn't match so I can fix it manually.
#
# Copyright (c) 2009 UK Citizens Online Democracy. All rights reserved.
# Email: matthew@mysociety.org; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: process_boundary_line-check_os_names,v 1.1 2009-12-20 01:05:27 matthew Exp $';

use strict;
require 5.8.0;

use DBI;
use DBD::Pg;
use Common;

my $dbh = Common::connect_to_mapit_database();
my $generation = $dbh->selectrow_array('select id from current_generation');
die "no current generation available" if (!defined($generation));

my $db_ons_code_to_id = $dbh->prepare("select id, name from area, area_name where id=area_id and name_type='O' and generation_high >= $generation and ons_code=?");

foreach (@ARGV) {
    foreach (glob("$_/*.dbf")) {
        next if /high_water/;
        m{/([^/]+)\.dbf};
        my $layer_name = $1;
        open(FP, "ogrinfo -ro $_ $layer_name |") or die $!;
        my ($name, $code) = ("", "");
        while (<FP>) {
            chomp;
            if (/^OGRFeature/) {
                deal($name, $code) if $code;
                next;
            }
            next if /^  POLYGON/;
            $name = $1 if /^  NAME.*? = (.*)/;
            $code = $1 if /^  CODE.*? = (.*)/
        }
        deal($name, $code) if $code;
    }
}

sub deal {
    my ($name, $code) = @_;
    return if $code eq '(null)' or $code eq '999999';
    if (!defined($name) || !defined($code)) {
        print "$name $code\n";
        exit;
    }
    $db_ons_code_to_id->execute($code);
    my ($id, $db_name) = $db_ons_code_to_id->fetchrow_array();
    if (!$id) {
        print "$code $name NO ENTRY\n";
    } elsif ($db_name ne $name && "$db_name (DET)" ne $name && "$db_name (B)" ne $name) {
        print "$code $id $name != $db_name\n";
    }
}

