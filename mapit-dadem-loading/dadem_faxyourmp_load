#!/usr/bin/perl -w
#
# dadem_faxyourmp_load
# Takes CSV files containing contact details for representatives
# from FaxYourMP, and loads them into DaDem.  
#
# Parameters: 
# stdin - pipe in the faxyourmp CSV file
#
# Copyright (c) 2004 UK Citizens Online Democracy. All rights reserved.
# Email: francis@mysociety.org; WWW: http://www.mysociety.org/
#

#email > HoC > Constituency

my $rcsid = ''; $rcsid .= '$Id: dadem_faxyourmp_load,v 1.1 2004-12-07 16:33:20 francis Exp $';

use strict;

use DBI;
use DBD::SQLite;
use Text::CSV;
use Data::Dumper;
use Common;
#DBI->trace(1);

my $types = [qw(WMC)];

my $m_dbh = connect_to_mapit_database();
my $d_dbh = connect_to_dadem_database();

$d_dbh->do(q#delete from representative where 
            (# . join(' or ', map { "area_type = '$_'" } @$types) . q#)#);

# %name_to_id
# Cache of name-->id map of all the areas
my %name_to_id;
my %name_to_type;
my $s = $m_dbh->prepare(
        q#select area_id, name, type from area_name, area
            where area_name.area_id = area.id
            and (# . join(' or ', map { "type = '$_'" } @$types) . q#)#
    );
$s->execute();
while (my ($area_id, $name, $type) = $s->fetchrow_array()) {
    print "$area_id $name $type\n";
    die "duplicate name" if exists($name_to_id{$name});
    $name_to_id{$name} = $area_id;
    $name_to_type{$name} = $type;
}

# Read CSV file, load into dadem
my $C = new Text::CSV;
<STDIN>;    # header line
while (my $line = <STDIN>) {
    chomp($line);
    $C->parse($line);
    my @row = map { trim_spaces($_) } $C->fields();
    map { die "value not defined for line '$line'" unless (defined $_); } @row;
    
    my ($name, $cons, $email, $fax, $phone, $constituencyfax) = @row;

    die "unmatched constituency name'$_', not in database" unless (exists($name_to_id{$cons}));
    my $area_id = $name_to_id{$cons};
    my $area_type = $name_to_type{$cons};

    print "insert into representative (area_id, area_type, name,
        party, method, email, fax) values (?, ?, ?, ?, ?, ?, ?)",
        $area_id, $area_type, $name, undef, 0, $email, $fax;
    print "\n";
    
#    $d_dbh->do("insert into representative (area_id, area_type, name,
#        party, method, email, fax) values (?, ?, ?, ?, ?, ?, ?)", {}, 
#        $area_id, $area_type, "$first $last", $party, 0, $email, $fax);
}
 
$m_dbh->disconnect();
$d_dbh->commit();
$d_dbh->disconnect();

