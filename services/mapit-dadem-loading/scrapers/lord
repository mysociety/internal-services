#!/usr/bin/perl -w -I../../perllib -I../../../perllib -I../
#
# scrapers/lord
# Load in Lords from JSON and write out CSV.
#
# Parameters: 
# $1 - people.json file
# $2 - output CSV file of all current members
#
# Example use:
# ./lord ~/parlparse/members/people.json ~/repdata/mysociety/lords.csv

use strict;

use File::Slurp;
use JSON;
use POSIX;
use Text::CSV_XS;

use Common;

my $today = strftime("%Y-%m-%d",localtime(time()));

my $people_json = shift(@ARGV);
die "specify people.json file" unless defined($people_json);
my $file_output_all = shift(@ARGV);
die "specify output CSV" if (!defined($file_output_all));

my $j = decode_json(read_file($people_json));
my %orgs;
$orgs{$_->{id}} = $_ for @{$j->{organizations}};

my $nowc = 0;
my @membersnow;
foreach my $member (@{$j->{memberships}}) {
    $member->{end_date} ||= '9999-12-31';
    next unless $member->{organization_id} && $member->{organization_id} eq 'house-of-lords';
    next unless $member->{start_date} le $today && $member->{end_date} ge $today;
    $nowc++;
    push @membersnow, $member;
}
die "very few Lords! only $nowc" if $nowc < 700;

my $csv = new Text::CSV_XS({ binary => 1 });
open(CSV, ">$file_output_all");
print CSV "name, constituency, email, fax, phone, constituencyfax, party\n";
foreach my $member (sort {
        return $a->{name}{lordofname} cmp $b->{name}{lordofname} if !$a->{name}{lordname} && !$b->{name}{lordname};
        return $a->{name}{lordofname} cmp $b->{name}{lordname} if !$a->{name}{lordname};
        return $a->{name}{lordname} cmp $b->{name}{lordofname} if !$b->{name}{lordname};
        return $a->{name}{lordname} cmp $b->{name}{lordname} || $a->{name}{lordofname} cmp $b->{name}{lordofname};
    } @membersnow) {
    my $fullname = $member->{name}{honorific_prefix};
    if ($member->{name}{lordname}) {
        $fullname .= " " . $member->{name}{lordname};
    }
    if ($member->{name}{lordofname}) {
        $fullname .= " of " . $member->{name}{lordofname};
        if (!$member->{name}{lordname}) {
            $fullname = "The " . $fullname;
        }
    }
    my $party = $member->{on_behalf_of_id} ? $orgs{$member->{on_behalf_of_id}}{name} : '';
    $csv->print(\*CSV, [$fullname, "House of Lords", undef, undef, undef, undef, $party]);
    print CSV "\n";
}
