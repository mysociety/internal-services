#!/usr/bin/perl -w -I../perllib -I../../../perllib
#
# search:
# Test search script.
#
# Copyright (c) 2005 UK Citizens Online Democracy. All rights reserved.
# Email: chris@mysociety.org; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: search,v 1.6 2006-01-16 18:22:38 francis Exp $';

use strict;
require 5.8.0;

# Horrible boilerplate to set up appropriate library paths.
use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../../perllib";
use lib "$FindBin::Bin/../../../perllib";

use mySociety::Config;
BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
}
use mySociety::DBHandle qw(dbh);

use Gaze;

my $country = uc(shift(@ARGV));
my $state;

if ($country =~ m/^([A-Z]{2}),([A-Z]{2})$/) {
    ($country, $state) = ($1, $2);
}

my $query = join(' ', @ARGV);
print "query = [$query]\n";

my $R = Gaze::find_places($country, $state, $query);
foreach (@$R) { #my $ufi (sort { $possible{$b} <=> $possible{$a} } keys(%possible)) {
    my ($name, $inq, $nearq, $lat, $lon) = @$_;
    print "$name";
    print ", $inq" if ($inq);
    print " (near $nearq)" if ($nearq);
    printf " %.4f %.4f\n", $lat, $lon;
    printf "    http://maps.google.com/maps?q=%f+%f\n", $lat, $lon;
}

