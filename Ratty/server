#!/usr/bin/perl -w -I../../perllib
#
# server:
# RABX server.
#
# To run it you need these lines in an Apache config:
#     Options +ExecCGI
#     SetHandler fastcgi-script
#
# Copyright (c) 2004 UK Citizens Online Democracy. All rights reserved.
# Email: chris@mysociety.org; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: server,v 1.10 2008-02-02 18:26:05 matthew Exp $';

# Do this first of all, because Ratty.pm needs to see the config file.
BEGIN {
    use mySociety::Config;
    mySociety::Config::set_file('../conf/general');
}

require 5.8.0;

use FCGI;
use RABX;

use mySociety::Config;
use mySociety::WatchUpdate;

use Ratty;

my $req = FCGI::Request();
my $W = new mySociety::WatchUpdate();
my $R = new Ratty();

# FastCGI signal handling
my $exit_requested = 0;
my $handling_request = 0;
$SIG{TERM} = $SIG{USR1} = sub {
    $exit_requested = 1;
    # exit(0) unless $handling_request;
};

while ($handling_request = ($req->Accept() >= 0)) {
    RABX::Server::CGI::dispatch(
            'Ratty.test' => sub {
                $R->test(@_);
            },
            'Ratty.admin_available_fields' => sub {
                $R->admin_available_fields(@_);
            },
            'Ratty.admin_update_rule' => sub {
                $R->admin_update_rule(@_);
            },
            'Ratty.admin_delete_rule' => sub {
                $R->admin_delete_rule(@_);
            },
            'Ratty.admin_delete_rules' => sub {
                $R->admin_delete_rules(@_);
            },
            'Ratty.admin_get_rules' => sub {
                $R->admin_get_rules(@_);
            },
            'Ratty.admin_get_rule' => sub {
                $R->admin_get_rule(@_);
            },
            'Ratty.admin_get_conditions' => sub {
                $R->admin_get_conditions(@_);
            }
        );
    $W->exit_if_changed();
    $handling_request = 0;
    last if $exit_requested;
}
